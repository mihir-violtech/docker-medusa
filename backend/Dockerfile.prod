# Use a Node.js 20 image as the base for building the application
FROM node:20 as builder

WORKDIR /app/medusa

# Copy the necessary files to install dependencies first
COPY . . 

# Ensure the node_modules directory is cleared if it exists
RUN rm -rf node_modules

# Install system dependencies (like python) needed for building the app
RUN apt-get update
RUN apt-get install -y python

# Install npm globally to ensure we have the latest version
RUN npm install -g npm@latest

# Install Medusa CLI globally
RUN npm install -g @medusajs/medusa-cli

# At this point, you should now have the necessary node modules and package.json
RUN npm install --loglevel=error  # This will generate package.json if it wasn't copied

# Run the build process
RUN npm run build


# Final stage: Production image
FROM node:20

WORKDIR /app/medusa

# Copy over the package.json and any necessary files generated by the builder stage
COPY --from=builder /app/medusa/package*.json ./

# Copy other necessary files, like scripts and configurations
COPY --from=builder /app/medusa/develop.sh . 
COPY --from=builder /app/medusa/.env . 
COPY --from=builder /app/medusa/medusa-config.js . 

# Install production dependencies
RUN apt-get update
RUN apt-get install -y python
RUN npm install --only=production  # Install production dependencies only

# Copy the build artifacts (compiled code) from the builder stage
COPY --from=builder /app/medusa/dist ./dist

# Expose port 9000 for Medusa
EXPOSE 9000

# Start the application using the develop.sh script
ENTRYPOINT ["./develop.sh", "start"]
